generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
    shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
    id            String       @id @default(cuid())
    name          String?
    email         String?      @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    Invitation    Invitation[]
    Game          Game[]

    @@index([email], type: Hash)
}

model Game {
    id         String       @id @default(cuid())
    createdBy  User         @relation(fields: [userId], references: [id])
    maxPlayers Int?         @default(0)
    active     Boolean?
    name       String?
    public     Boolean?
    startDate  DateTime?
    duration   Int?
    createdAt  DateTime?    @default(now()) @map("created_at")
    updatedAt  DateTime?    @updatedAt @map("updated_at")
    Invitation Invitation[]
    userId     String

    @@index([id], type: Hash)
}

model Invitation {
    id              String     @id @default(cuid())
    answer          Boolean?
    emailSent       Boolean?
    benchType       BenchType?
    validInvitation Boolean?   @default(true)
    gameId          String?
    userId          String?
    game            Game?      @relation(fields: [gameId], references: [id])
    user            User?      @relation(fields: [userId], references: [id])

    @@index([userId, gameId])
}

enum BenchType {
    OFFICIAL
    RESERVE
}
